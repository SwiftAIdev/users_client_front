{
  "openapi": "3.1.0",
  "info": {
    "title": "SwiftAI - user service",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "/user_service/api"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create User",
        "description": "Create a new user.\n\nThis endpoint allows for the creation of a new user.",
        "operationId": "Create_User_users_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchemaAdd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get Users",
        "description": "Get a paginated list of users.\n\nThis endpoint retrieves a paginated list of users based on provided filters.",
        "operationId": "Get_Users_users__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 25,
              "title": "Size"
            }
          },
          {
            "name": "surname",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Surname"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email"
            }
          },
          {
            "name": "email__not",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Email  Not"
            }
          },
          {
            "name": "third_party_ID",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Third Party Id"
            }
          },
          {
            "name": "invite_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Invite Code"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id  In"
            }
          },
          {
            "name": "id__neq",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id  Neq"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Active"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationRequest_UserSchemaBase_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User By Id",
        "description": "Retrieve a user by ID.\n\nThis endpoint retrieves a user by their unique ID.",
        "operationId": "Get_User_by_ID_users__user_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User",
        "description": "Update a user by ID.\n\nThis endpoint updates the details of an existing user.",
        "operationId": "Update_User_users__user_id__put",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchemaUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/change_email": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change User Email",
        "description": "Change a user's email by ID.\n\nThis endpoint allows changing the email of an existing user.",
        "operationId": "Change_User_Email_users__user_id__change_email_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchemaChangeEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/change_password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change User Password",
        "description": "Change a user's password by ID.\n\nThis endpoint allows changing the password of an existing user.",
        "operationId": "Change_User_Password_users__user_id__change_password_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchemaChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register User",
        "description": "Register a user.\n\nThis endpoint registers a new user with the provided information.",
        "operationId": "Register_User_users__user_id__register_post",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchemaRegister"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login User",
        "description": "Log in a user.\n\nThis endpoint allows a user to log in with the provided credentials.",
        "operationId": "Login_User_users_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchemaLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{integrator_id}/invited": {
      "get": {
        "tags": [
          "Invited User"
        ],
        "summary": "Get Invited Users",
        "description": "Get invited users.\n\nThis endpoint retrieves a paginated list of users invited by a specific user.",
        "operationId": "Get_Invited_Users_users__integrator_id__invited_get",
        "parameters": [
          {
            "name": "integrator_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Integrator Id"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 25,
              "title": "Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationRequest_UserSchemaBase_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/invite": {
      "post": {
        "tags": [
          "Invited User"
        ],
        "summary": "Invite User",
        "description": "Invite a new user.\n\nThis endpoint allows inviting a new user.",
        "operationId": "Invite_User_users_invite_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteUserSchemaAdd"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultRequest"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/integrator": {
      "get": {
        "tags": [
          "Invited User"
        ],
        "summary": "Get Integrator",
        "description": "Get integrator by user ID.\n\nThis endpoint retrieves the integrator associated with a specific user.",
        "operationId": "Get_Integrator_users__user_id__integrator_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSchemaBase"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/check-invite/{integrator_id}": {
      "get": {
        "tags": [
          "Invited User"
        ],
        "summary": "Check Invite By Integrator Id",
        "description": "Check user invitation.\n\nThis endpoint verifies if a user was invited by a specific integrator.",
        "operationId": "Check_Invite_By_Integrator_ID_users__user_id__check_invite__integrator_id__get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "integrator_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Integrator Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultRequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{user_id}/check-invite": {
      "get": {
        "tags": [
          "Invited User"
        ],
        "summary": "Check Invite",
        "description": "Check user invitation.\n\nThis endpoint verifies if a user was invited by a specific integrator.",
        "operationId": "Check_Invite_users__user_id__check_invite_get",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultRequest"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/": {
      "post": {
        "tags": [
          "Permission"
        ],
        "summary": "Create Permission",
        "description": "Create a new permission.\n\nThis endpoint allows for the creation of a new permission.",
        "operationId": "Create_Permission_permissions__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionSchemaAdd"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get Permissions",
        "description": "Get a paginated list of permissions.\n\nThis endpoint retrieves a paginated list of permissions based on provided filters.",
        "operationId": "Get_Permissions_permissions__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 25,
              "title": "Size"
            }
          },
          {
            "name": "is_delete__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Delete  In"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name  In"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id  In"
            }
          },
          {
            "name": "id__neq",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id  Neq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationRequest_PermissionSchema_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/{permission_id}": {
      "get": {
        "tags": [
          "Permission"
        ],
        "summary": "Get Permission By Id",
        "description": "Retrieve a permission by ID.\n\nThis endpoint retrieves a permission by its unique ID.",
        "operationId": "Get_Permission_by_ID_permissions__permission_id__get",
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permission"
        ],
        "summary": "Delete Permission",
        "description": "Delete a permission by ID.\n\nThis endpoint deletes a permission by its unique ID.",
        "operationId": "Delete_Permission_permissions__permission_id__delete",
        "parameters": [
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/roles/": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create Role",
        "description": "Create a new role.\n\nThis endpoint allows for the creation of a new role.",
        "operationId": "Create_Role_roles__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleSchemaAdd"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Roles",
        "description": "Get a paginated list of roles.\n\nThis endpoint retrieves a paginated list of roles based on provided filters.",
        "operationId": "Get_Roles_roles__get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 25,
              "title": "Size"
            }
          },
          {
            "name": "is_delete",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Delete"
            }
          },
          {
            "name": "is_delete__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Delete  In"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "id__in",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id  In"
            }
          },
          {
            "name": "id__neq",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id  Neq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationRequest_RoleSchema_"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{role_id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get Role By Id",
        "description": "Retrieve a role by ID.\n\nThis endpoint retrieves a role by its unique ID.",
        "operationId": "Get_Role_by_ID_roles__role_id__get",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete Role",
        "description": "Delete a role by ID.\n\nThis endpoint deletes a role by its unique ID.",
        "operationId": "Delete_Role_roles__role_id__delete",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{role_id}/permissions": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Add Permissions To Role",
        "description": "Add a permission to a role by ID.\n\nThis endpoint allows adding a permission to an existing role.",
        "operationId": "Add_Permissions_to_Role_roles__role_id__permissions_post",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleSchemaAddPermission"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    },
    "/roles/{role_id}/permissions/{permission_id}": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Add Permission To Role",
        "description": "Add a permission to a role by ID.\n\nThis endpoint allows adding a permission to an existing role.",
        "operationId": "Add_Permission_to_Role_roles__role_id__permissions__permission_id__post",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          },
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Remove Permission To Role",
        "description": "Remove a permission to a role by ID.\n\nThis endpoint allows adding a permission to an existing role.",
        "operationId": "Remove_Permission_to_Role_roles__role_id__permissions__permission_id__delete",
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Role Id"
            }
          },
          {
            "name": "permission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Permission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleSchema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceErrorPydantic"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthCheckDetailsSchema": {
        "properties": {
          "database": {
            "$ref": "#/components/schemas/StatusDatabase"
          },
          "redis": {
            "$ref": "#/components/schemas/StatusRedis"
          },
          "uptime": {
            "type": "string",
            "title": "Uptime"
          }
        },
        "type": "object",
        "required": [
          "database",
          "redis",
          "uptime"
        ],
        "title": "HealthCheckDetailsSchema"
      },
      "HealthCheckResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "details": {
            "$ref": "#/components/schemas/HealthCheckDetailsSchema"
          }
        },
        "type": "object",
        "required": [
          "status",
          "details"
        ],
        "title": "HealthCheckResponse"
      },
      "InviteUserSchemaAdd": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "ID пользователя"
          },
          "invite_code": {
            "type": "string",
            "title": "Код"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "invite_code"
        ],
        "title": "InviteUserSchemaAdd"
      },
      "PaginationRequest_PermissionSchema_": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Страница"
          },
          "size": {
            "type": "integer",
            "title": "Размер"
          },
          "total": {
            "type": "integer",
            "title": "Всего"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PermissionSchema"
            },
            "type": "array",
            "title": "Список элементов"
          }
        },
        "type": "object",
        "required": [
          "page",
          "size",
          "total",
          "data"
        ],
        "title": "PaginationRequest[PermissionSchema]"
      },
      "PaginationRequest_RoleSchema_": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Страница"
          },
          "size": {
            "type": "integer",
            "title": "Размер"
          },
          "total": {
            "type": "integer",
            "title": "Всего"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/RoleSchema"
            },
            "type": "array",
            "title": "Список элементов"
          }
        },
        "type": "object",
        "required": [
          "page",
          "size",
          "total",
          "data"
        ],
        "title": "PaginationRequest[RoleSchema]"
      },
      "PaginationRequest_UserSchemaBase_": {
        "properties": {
          "page": {
            "type": "integer",
            "title": "Страница"
          },
          "size": {
            "type": "integer",
            "title": "Размер"
          },
          "total": {
            "type": "integer",
            "title": "Всего"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/UserSchemaBase"
            },
            "type": "array",
            "title": "Список элементов"
          }
        },
        "type": "object",
        "required": [
          "page",
          "size",
          "total",
          "data"
        ],
        "title": "PaginationRequest[UserSchemaBase]"
      },
      "PermissionSchema": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "ID",
            "description": "ID пользователя в системе"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Дата создания",
            "default": "2024-09-11T10:59:18.810405"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Дата обновления",
            "description": "Дата последнего обновления",
            "default": "2024-09-11T10:59:18.810449"
          },
          "is_delete": {
            "type": "boolean",
            "title": "Удален ли пользователь",
            "default": false
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Название разрешения"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PermissionSchema"
      },
      "PermissionSchemaAdd": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "PermissionSchemaAdd"
      },
      "ResultRequest": {
        "properties": {
          "result": {
            "type": "boolean",
            "title": "результат проверки"
          }
        },
        "type": "object",
        "required": [
          "result"
        ],
        "title": "ResultRequest"
      },
      "RoleSchema": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "ID",
            "description": "ID пользователя в системе"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Дата создания",
            "default": "2024-09-11T10:59:18.810405"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Дата обновления",
            "description": "Дата последнего обновления",
            "default": "2024-09-11T10:59:18.810449"
          },
          "is_delete": {
            "type": "boolean",
            "title": "Удален ли пользователь",
            "default": false
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Название"
          },
          "permissions": {
            "items": {
              "$ref": "#/components/schemas/PermissionSchema"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "permissions"
        ],
        "title": "RoleSchema"
      },
      "RoleSchemaAdd": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Название"
          },
          "permissions": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Список ID разрешений"
          }
        },
        "type": "object",
        "required": [
          "name",
          "permissions"
        ],
        "title": "RoleSchemaAdd"
      },
      "RoleSchemaAddPermission": {
        "properties": {
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Список name разрешений"
          }
        },
        "type": "object",
        "required": [
          "permissions"
        ],
        "title": "RoleSchemaAddPermission"
      },
      "ServiceErrorPydantic": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "$ref": "#/components/schemas/TypeErrorEnum"
          },
          "translate_path": {
            "type": "string",
            "title": "Translate Path"
          },
          "details": {
            "type": "string",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "message",
          "type",
          "translate_path",
          "details"
        ],
        "title": "ServiceErrorPydantic"
      },
      "StatusDatabase": {
        "type": "string",
        "enum": [
          "connected",
          "disconnected"
        ],
        "title": "StatusDatabase"
      },
      "StatusRedis": {
        "type": "string",
        "enum": [
          "available",
          "unavailable"
        ],
        "title": "StatusRedis"
      },
      "TypeErrorEnum": {
        "type": "string",
        "enum": [
          "user error",
          "unauthorized",
          "forbidden",
          "not found",
          "conflict",
          "server error"
        ],
        "title": "TypeErrorEnum"
      },
      "UserSchemaAdd": {
        "properties": {
          "third_party_ID": {
            "type": "string",
            "title": "Стороние id"
          },
          "domain": {
            "type": "string",
            "title": "Домен"
          },
          "is_integrator": {
            "type": "boolean",
            "title": "Является ли пользователь интегратором",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "third_party_ID",
          "domain"
        ],
        "title": "UserSchemaAdd"
      },
      "UserSchemaBase": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "ID",
            "description": "ID пользователя в системе"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Дата создания",
            "default": "2024-09-11T10:59:18.810405"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Дата обновления",
            "description": "Дата последнего обновления",
            "default": "2024-09-11T10:59:18.810449"
          },
          "is_delete": {
            "type": "boolean",
            "title": "Удален ли пользователь",
            "default": false
          },
          "surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Фамилия"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Имя"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Домен"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Почта"
          },
          "invite_code": {
            "type": "string",
            "title": "invite_code",
            "default": ""
          },
          "third_party_ID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Стороние id"
          },
          "is_active": {
            "type": "boolean",
            "title": "Активне ли пользователь",
            "default": true
          },
          "is_integrator": {
            "type": "boolean",
            "title": "Является ли интегратором",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "third_party_ID"
        ],
        "title": "UserSchemaBase"
      },
      "UserSchemaChangeEmail": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Почта"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "UserSchemaChangeEmail"
      },
      "UserSchemaChangePassword": {
        "properties": {
          "current_password": {
            "type": "string",
            "title": "Текущий Пароль"
          },
          "new_password": {
            "type": "string",
            "title": "Новый Пароль"
          },
          "repeat_password": {
            "type": "string",
            "title": "Повторный Пароль"
          }
        },
        "type": "object",
        "required": [
          "current_password",
          "new_password",
          "repeat_password"
        ],
        "title": "UserSchemaChangePassword"
      },
      "UserSchemaLogin": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Почта"
          },
          "password": {
            "type": "string",
            "title": "Пароль"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserSchemaLogin"
      },
      "UserSchemaRegister": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Почта"
          },
          "password": {
            "type": "string",
            "title": "Пароль"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "title": "UserSchemaRegister"
      },
      "UserSchemaUpdate": {
        "properties": {
          "surname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Фамилия"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Имя"
          },
          "domain": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Домен"
          }
        },
        "type": "object",
        "title": "UserSchemaUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}